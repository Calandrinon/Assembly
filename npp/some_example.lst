     1                                  ;Given a lower case string of bytes obtain the corresponding upper case string
     2                                  bits 32 
     3                                  global start        
     4                                  extern exit,printf ; tell nasm that exit exists even if we won't be defining it
     5                                  import exit msvcrt.dll ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
     8                                  ; our data is declared here (the variables needed by our program)
     9                                  segment data use32 class=data
    10 00000000 6162636D6E              	s db 'a', 'b', 'c', 'm','n' ; declare the string of bytes
    11                                  	l equ $-s ; compute the length of the string in l
    12 00000005 00<rept>                	d times l db 0 ; reserve l bytes for the destination string and initialize it
    13                                  segment code use32 class=code
    14                                  start:
    15 00000000 B905000000              	mov ecx, l ; we put the length l in ECX in order to make the loop
    16 00000005 BE00000000              	mov esi, 0     
    17 0000000A E313                    	jecxz Sfarsit      
    18                                  	Repeta:
    19 0000000C 8A86[00000000]          		mov al, [s+esi]
    20 00000012 B320                    		mov bl, 'a'-'A' ; in order to obtain the corresponding upper case letter, we will decrease the ASCII CODE
    21                                  		; of 'a'-'A' from the lower case letter AL
    22 00000014 28D8                    		sub al, bl             
    23 00000016 8886[05000000]          		mov [d+esi], al    
    24 0000001C 46                      		inc esi
    25 0000001D E2ED                    	loop Repeta
    26                                  	Sfarsit:;end of the program
    27                                  
    28                                  	; exit(0)
    29 0000001F 6A00                    	push dword 0 ; push the parameter for exit onto the stack
    30 00000021 FF15[00000000]          	call [exit] ; call exit to terminate the program
    31                                  
