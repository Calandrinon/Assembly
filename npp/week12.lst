     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, printf
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  
     8                                  %include "longest_common_prefix.asm"
     1                              <1> %ifndef _LONGEST_COMMON_PREFIX_ASM_
     2                              <1> %define _LONGEST_COMMON_PREFIX_ASM_
     3                              <1> 
     4                              <1> print_prefix:
     5                              <1>     ;; void print_prefix(char *string, int number_of_characters); -> prints the prefix with the length "number_of_characters"
     6                              <1>     
     7 00000000 8B442408            <1>     mov EAX, [ESP+8]
     8 00000004 8B5C2404            <1>     mov EBX, [ESP+4]
     9 00000008 C6040300            <1>     mov [EBX+EAX], byte 0
    10                              <1>     
    11 0000000C FF742404            <1>     push dword [ESP+4]
    12 00000010 FF15[00000000]      <1>     call [printf]
    13 00000016 83C404              <1>     add ESP, 4
    14                              <1>     
    15 00000019 C20800              <1>     ret 4*2
    16                              <1> 
    17                              <1> min:
    18                              <1>     ;; int min(int a, int b);
    19 0000001C 8B4C2404            <1>     mov ECX, [ESP+4]    ;; the first number
    20 00000020 8B542408            <1>     mov EDX, [ESP+8]    ;; the second number
    21                              <1>     
    22 00000024 39CA                <1>     cmp EDX, ECX
    23 00000026 7703                <1>     ja .set_result
    24 00000028 C20800              <1>     ret 4*2
    25                              <1>     
    26                              <1>     .set_result:
    27 0000002B 89CA                <1>         mov EDX, ECX
    28 0000002D C20800              <1>         ret 4*2
    29                              <1>     
    30                              <1> 
    31                              <1> longest_common_prefix:
    32                              <1>     ;; int longest_common_prefix(char *str1, char *str2, int l_str1, int l_str2);
    33                              <1>     
    34 00000030 8B442404            <1>     mov EAX, [ESP+4]   ;; the offset of the first string
    35 00000034 8B5C2408            <1>     mov EBX, [ESP+8]   ;; the offset of the second string
    36                              <1>     
    37                              <1>     
    38 00000038 FF74240C            <1>     push dword [ESP+12]   ;; [ESP+12] - the size of the first string
    39 0000003C FF742410            <1>     push dword [ESP+16]   ;; [ESP+16] - the size of the second string
    40 00000040 E8D7FFFFFF          <1>     call min        ;; moves into EDX the minimum between the two numbers
    41                              <1>     
    42 00000045 89D1                <1>     mov ECX, EDX
    43 00000047 6A00                <1>     push dword 0    ;; [ESP+4] - here, we will store the length of the longest common prefix
    44 00000049 52                  <1>     push dword EDX  ;; [ESP] - here we will store EDX, the minimum of the two length of the strings
    45                              <1>     
    46                              <1>     .repeat:
    47 0000004A 8B3424              <1>         mov ESI, [ESP]
    48 0000004D 29CE                <1>         sub ESI, ECX      ;; ESI = [ESP] - ECX
    49                              <1>         
    50 0000004F 8A1430              <1>         mov DL, [EAX+ESI] ;; [EAX+ESI] - the character from the first string
    51 00000052 3A1433              <1>         cmp DL, [EBX+ESI] ;; [EBX+ESI] - the character from the second string is compared with the character from the first string
    52 00000055 7402                <1>         je .increment_length
    53 00000057 EB0D                <1>         jmp .print_longest_common_prefix
    54                              <1>         
    55                              <1>         .increment_length:
    56 00000059 FF442404            <1>             inc dword [ESP+4]
    57 0000005D E2EB                <1>     loop .repeat
    58                              <1>     
    59 0000005F 837C240400          <1>     cmp dword [ESP+4], 0
    60 00000064 EB0E                <1>     jmp .no_common_prefix_exception
    61                              <1>     
    62                              <1>     
    63                              <1>     .print_longest_common_prefix:
    64 00000066 FF742404            <1>         push dword [ESP+4]
    65 0000006A 50                  <1>         push EAX
    66 0000006B E890FFFFFF          <1>         call print_prefix
    67 00000070 83C408              <1>         add ESP, 4*2
    68 00000073 C3                  <1>         ret
    69                              <1>         
    70                              <1>     .no_common_prefix_exception:
    71 00000074 68[AB000000]        <1>         push dword no_prefix_error_message
    72 00000079 FF15[00000000]      <1>         call [printf]
    73 0000007F 83C404              <1>         add ESP, 4
    74 00000082 83C408              <1>         add ESP, 4*2
    75 00000085 C3                  <1>         ret
    76                              <1> 
    77                              <1> %endif
     9                                  
    10                                  segment data use32 class=data
    11 00000086 616262626262626262-         a db "abbbbbbbbbbbbbbbbbbbbb", 0
    11 0000008F 626262626262626262-
    11 00000098 6262626200         
    12                                      len_a equ $-a-1
    13 0000009D 616263646566666600          b db "abcdefff", 0
    14                                      len_b equ $-b-1
    15 000000A6 6162636400                  d db "abcd", 0
    16                                      len_d equ $-d-1
    17 000000AB 546865726520697320-         no_prefix_error_message db "There is no common prefix!", 0
    17 000000B4 6E6F20636F6D6D6F6E-
    17 000000BD 207072656669782100 
    18 000000C6 2000                        space db " ", 0
    19                                  ;;; TASK 7:
    20                                  ;;; Three strings (of characters) are given. Show the longest prefix for each of the three pairs of two strings that can be formed. 
    21                                      
    22                                  segment code use32 class=code
    23                                  print_space:
    24 00000000 68[C6000000]                push dword space
    25 00000005 FF15[00000000]              call [printf]
    26 0000000B 83C404                      add ESP, 4*1
    27 0000000E C3                          ret
    28                                      
    29                                      
    30                                  start:
    31 0000000F 6A08                        push dword len_b
    32 00000011 6A16                        push dword len_a
    33 00000013 68[9D000000]                push dword b
    34 00000018 68[86000000]                push dword a
    35 0000001D E8(30000000)                call longest_common_prefix
    36 00000022 E8D9FFFFFF                  call print_space
    37                                      
    38 00000027 6A04                        push dword len_d
    39 00000029 6A08                        push dword len_b
    40 0000002B 68[A6000000]                push dword d
    41 00000030 68[9D000000]                push dword b
    42 00000035 E8(30000000)                call longest_common_prefix
    43 0000003A E8C1FFFFFF                  call print_space
    44                                      
    45 0000003F 6A04                        push dword len_d
    46 00000041 6A16                        push dword len_a
    47 00000043 68[A6000000]                push dword d
    48 00000048 68[86000000]                push dword a
    49 0000004D E8(30000000)                call longest_common_prefix
    50 00000052 E8A9FFFFFF                  call print_space
    51                                      
    52 00000057 6A00                        push dword 0
    53 00000059 FF15[00000000]              call [exit]
    54                                      
    55                                      
    56                                      
