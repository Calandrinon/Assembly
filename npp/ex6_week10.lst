     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, fopen, fclose, printf, fread
     5                                  import exit msvcrt.dll
     6                                  import fopen msvcrt.dll
     7                                  import fclose msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import fread msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 00                          max_frequency_digit DB 0
    13 00000001 00                          max_frequency DB 0
    14 00000002 <res 0000000A>              digit_frequency RESB 10
    15 0000000C 6469676974732E7478-         filename DB "digits.txt", 0
    15 00000015 7400               
    16 00000017 7200                        access_mode DB "r", 0
    17 00000019 FFFFFFFF                    file_descriptor DD -1
    18 0000001D 00000000                    digit DD 0
    19 00000021 44696769743A202564-         format DB "Digit: %d;      Frequency: %d", 0
    19 0000002A 3B2020202020204672-
    19 00000033 657175656E63793A20-
    19 0000003C 256400             
    20 0000003F 00000000                    counter DD 0
    21                                     
    22                                      
    23                                  segment code use32 class=code
    24                                  start:
    25                                      
    26 00000000 68[17000000]                push dword access_mode
    27 00000005 68[0C000000]                push dword filename
    28 0000000A FF15[00000000]              call [fopen]
    29 00000010 83C408                      add ESP, 4*2
    30                                      
    31 00000013 A3[19000000]                mov [file_descriptor], EAX
    32 00000018 83F800                      cmp EAX, 0
    33 0000001B 0F84CC000000                je end_of_program
    34                                      
    35                                      get_number_of_numbers:
    36 00000021 FF35[19000000]                  push dword [file_descriptor]
    37 00000027 6A01                            push dword 1
    38 00000029 6A01                            push dword 1
    39 0000002B 68[1D000000]                    push dword digit
    40 00000030 FF15[00000000]                  call [fread]
    41 00000036 83C410                          add ESP, 4*4
    42                                          
    43 00000039 8B3D[1D000000]                  mov EDI, [digit]
    44 0000003F 83FF0A                          cmp EDI, 10
    45 00000042 741C                            je set_counter
    46 00000044 83EF30                          sub EDI, 48
    47                                          
    48 00000047 A1[3F000000]                    mov EAX, [counter]
    49 0000004C B90A000000                      mov ECX, 10
    50 00000051 F7E1                            mul ECX
    51 00000053 A3[3F000000]                    mov [counter], EAX
    52                                          
    53 00000058 013D[3F000000]                  add [counter], EDI
    54                                          
    55 0000005E EBC1                        jmp get_number_of_numbers
    56                                      
    57                                      set_counter:
    58 00000060 8B3D[3F000000]              mov EDI, [counter]
    59                                      
    60                                      count_frequency:
    61 00000066 FF35[19000000]                  push dword [file_descriptor]
    62 0000006C 6A01                            push dword 1
    63 0000006E 6A01                            push dword 1
    64 00000070 68[1D000000]                    push dword digit
    65 00000075 FF15[00000000]                  call [fread]
    66 0000007B 83C410                          add ESP, 4*4
    67                                          
    68 0000007E A1[1D000000]                    mov EAX, [digit]
    69 00000083 83F80A                          cmp EAX, 10
    70 00000086 74DE                            je count_frequency
    71 00000088 83E830                          sub EAX, 48
    72                                          
    73 0000008B BB[02000000]                    mov EBX, digit_frequency
    74 00000090 FE0403                          inc byte [EBX+EAX*1]
    75 00000093 8B1403                          mov EDX, [EBX+EAX*1]
    76                                          
    77 00000096 4F                              dec EDI
    78 00000097 83FF00                          cmp EDI, 0
    79 0000009A 7402                            je out_of_loop
    80 0000009C EBC8                        jmp count_frequency
    81                                      out_of_loop:
    82                                      
    83                                      
    84 0000009E B909000000                  mov ECX, 9
    85                                      find_max_frequency:
    86 000000A3 BB[02000000]                    mov EBX, digit_frequency
    87 000000A8 B800000000                      mov EAX, 0
    88 000000AD A0[01000000]                    mov AL, [max_frequency]
    89 000000B2 38040B                          cmp [EBX+ECX*1], AL
    90 000000B5 7F3E                            jg update_max
    91                                          continue:
    92 000000B7 E2EA                        loop find_max_frequency
    93                                      
    94 000000B9 FF35[19000000]              push dword [file_descriptor]
    95 000000BF FF15[00000000]              call [fclose]
    96 000000C5 83C404                      add ESP, 4*1
    97                                      
    98 000000C8 B800000000                  mov EAX, 0
    99 000000CD BA00000000                  mov EDX, 0
   100 000000D2 A0[01000000]                mov AL, [max_frequency]
   101 000000D7 8A15[00000000]              mov DL, [max_frequency_digit]
   102                                      
   103 000000DD 50                          push EAX
   104 000000DE 52                          push EDX
   105 000000DF 68[21000000]                push dword format
   106 000000E4 FF15[00000000]              call [printf]
   107 000000EA 83C40C                      add ESP, 4*3
   108                                      
   109                                      end_of_program:
   110 000000ED 6A00                        push dword 0
   111 000000EF FF15[00000000]              call [exit]
   112                                      
   113                                      update_max:
   114 000000F5 8A040B                          mov AL, [EBX+ECX*1]
   115 000000F8 A2[01000000]                    mov [max_frequency], AL
   116 000000FD 880D[00000000]                  mov [max_frequency_digit], CL
   117 00000103 EBB2                        jmp continue
